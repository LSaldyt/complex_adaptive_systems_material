#!/usr/bin/env python3
import os
from functools import partial

import pickle
import pandas
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

from collections import defaultdict

sns.set(style="whitegrid")

if not os.path.isfile('summed_distances.csv'):
    data = pandas.read_csv('modified.csv')

    my_dpi=96
    plt.figure(figsize=(480/my_dpi, 480/my_dpi), dpi=my_dpi)
    ids = set(data['id'])
    data['distances_sum'] = sum(data['d{}'.format(i)] for i in ids)
    data.to_csv('summed_distances.csv')

data = pandas.read_csv('summed_distances.csv')
print(data)

threshold = 100

ids = set(data['id'])

interactionCounts = defaultdict(list)

for frame in sorted(set(data.frames)):
    for i in ids:
        interactionCounts[i].append(0)
        current = data[((data.frames == frame) & (data.id == i))]
        for j in ids:
            interactionCounts[i][-1] += np.sum(current['d' + str(j)] < threshold)
    print('{}\r'.format(frame), end='')
print('')

excluded = {19}
for i in set(data['id']):
    if i in excluded:
        color = 'orange'
        alpha = 1.0
        linewidth = 2.0
    else:
        color = 'black'
        alpha = 0.2
        linewidth = 0.5
    plt.plot(list(sorted(set(data['frames']))), interactionCounts[i], marker='', color=color, linewidth=linewidth, alpha=alpha)
#plt.plot(data['frames'], data['distances_sum'], marker='', color='orange')
plt.title('Number of interactions over time with threshold={} pixels'.format(threshold))
plt.xlabel('Frames (Taken at 30hz)')
plt.ylabel('Number of interactions')
plt.show()

data.to_csv('modified_counts.csv')

with open('interactionCounts.pkl', 'wb') as outfile:
    pickle.dump(interactionCounts, outfile)
